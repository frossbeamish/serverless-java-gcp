buildscript {
	repositories {
		jcenter()
		mavenCentral()
		mavenLocal()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.1.5.RELEASE'
		classpath 'gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.22.1'
	}
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
}

bootJar {
	archiveFileName = "app.jar"
}

docker {
	name "us.gcr.io/${project.rootProject.ext.gcpProject}/helloworld-gke:${project.version.replace('+', '.')}"
	files new File(project.buildDir, '/libs/app.jar')
	buildArgs([BUILD_VERSION: project.version])
}
final dockerTask = project.tasks.docker
dockerTask.dependsOn project.tasks.assemble

final releaseDockerTask = project.tasks.create(name: 'releaseDocker', group: 'Keap',
		description: 'Releases the Docker artifact to us.gcr.io')
releaseDockerTask.dependsOn project.tasks.dockerPush

final deployCloudRunTask = project.tasks.create(name: 'deployCloudRun', group: 'Keap', type: Exec,
		description: 'Deploys the artifact to cloud run') {
	executable 'gcloud'
	args 'beta', 'run', 'deploy', 'helloworld', "--image=${docker.name}", "--project=${project.rootProject.ext.gcpProject}", '--allow-unauthenticated', '--memory=512M'
}
deployCloudRunTask.dependsOn releaseDockerTask
project.tasks.deploy.dependsOn deployCloudRunTask
